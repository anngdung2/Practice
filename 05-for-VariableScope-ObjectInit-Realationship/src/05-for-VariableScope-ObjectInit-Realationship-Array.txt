	
**5일차 주요목차**
-반복문 for, while, do while (행열만들기, 99단만들기)
-variable Scope 변수 범위 : instance variable, local variable
-자바 메모리구조 java memory	
-Object객체 초기화단계
-Object (or Class) Relationship: use a, has a, consist of relationship


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
■variable Scope 변수 범위 : instance variable, local variable
 변수종류:
 	(1)인스턴스변수: 	class차원에서 소환(클래스에 바로 연결되면 인스턴스)
 					객체의 속성정보를 저장, java memory heap영역에 저장,
 					선언만 해도 기본 초기화됨.(int age; < 0으로 초기화,
 					String name; < null(없다)로 초기화, boolean flag; <false로 초기)
					 
 	(2)지역변수: 	매서드 또는 생성자에 선언되고 이것에 초기화된다.(매서드는 이미 클래스에서 하나 건너뜀)
 				local variable, 임시로 사용되는 변수, stack영역에 저장
 				선언되고 초기화된 영역({})에서만 사용이 가능
 				instance variable과 다르게 명시적인(의도적인)초기화가 필요하다
 				즉 선언만 해서는 사용이 불가함 >>int count2:0; 이런식으로 명시적 초기화 필요
 				java memory stack 영역에 저장, 끝나면 메모리에서 삭제됨
 			
 	(3)static variable (or class variable): 상속 이후 공부예정
 
 
 	
 ■java 주요 Memory영역
 stack영역: local variable이 저장되는 영역, LIFO(Lasi in, First Out)
 			마지막입력된게 먼저나온다. 후입선출
 			a, b, c순으로 들어갔다하면 마지막 c가 먼저 나온다.
 Heap영역: instance variable이 저장되는 영역, 객체의 정보가 저장될 때 주소값을 만들어 참조하게 한다
 Class Area(or Meta Space): 이후 공부예정, static variable이 저장되는 영역 	
 
 
 
 ■Object객체 초기화단계	 
 
 1) 인스턴스변수의 기본 초기화 (ex-정수형 0 , 실수형 0.0, 논리형은 false, 참조형은 null)
 2) 인스턴스변수의 명시적 초기화 ( ex-private int day=1;)
 3) 생성자에 의한 초기화 (인스턴스 초기화 해도 결국 생성장에 초기화되긴 한다
 4) 참조변수에 객체의 주소값 할당
 
 -Object (or class) Realationship: use a, has a, consist of relationship
 :association, aggregation, composition
 association(연관)->use a관계 예)사람이 렌트카를 이용하다
 aggregation(집합 or 집단화)->has a 관계 예)사람이 스마트폰을 가지고 있다
 composition(구성)> consist of 예)사람은 뇌를 가지고 있다 , 자동차가 엔진을 가지고 있다
 UML(unified Modeling Language: 통합모델링언어) 중 class Diagram으로 위의 관계를 표현해본다
 
 
 **6일차 수업목차**
 -Object (or Class) Relationship: use a, has a, consist of relationship
 -Array (배열)
 1.primitive data type을 저장하는 배열
 2.reference data type을 저장하는 배열
-inheritance(상속) 
  is a relationship
  extends
  super
  overriding
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 